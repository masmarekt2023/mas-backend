const Express = require("express");
const controller = require("./controller");
const auth = require("../../../../helper/auth");
const upload = require("../../../../helper/uploadHandler");
const matchFaces = require("./controller");
module.exports = Express.Router()
    .post("/sendOtpRegister", controller.sendOtpRegister)
    .post("/register", controller.register)
    .post("/login", controller.login)
    .post("/forgotPassword", controller.forgotPassword)
    .post("/resetPassword/", controller.resetPassword)
    .put("/order", controller.order)
    .get("/getUser/:userName", controller.getUser)
    .get("/getUserDetail/:userName", controller.getUserDetail)
    .get("/userList", controller.userList)
    .get("/latestUserList", controller.latestUserList)
    .get("/bundlePostList/:bundleId", controller.bundlePostList)
    .get("/getAdvertisement", controller.getAdvertisement)
    .get("/getBanner", controller.getBanner)
    .get("/listBanner", controller.listBanner)
    .get("/listAppBanner", controller.listAppBanner)
    .get("/allUserList", controller.allUserList)
    .get("/searchUser/", controller.searchUser)
    .get('/userNft/:userId', controller.userNft)
    .get('/topUsers', controller.topUser)
    .get("/getBannerDuration", controller.getBannerDuration)
    .get("/getAppBannerDuration", controller.getAppBannerDuration)

    .use(auth.verifyToken)
    .post("/verify-otp/", controller.verifyOtp)
    .post("/send-otp/", controller.resendOtp)
    .post("/login", controller.login)
    .get("/profile", controller.profile)
    .get("/totalEarnings", controller.getTotalEarnings)
    .get("/commissionFee", controller.getCommissionFee)
    .get("/nftTransactionList", controller.nftTransactionList)
    .get("/myTransactionHistory", controller.myTransactionHistory)
    .get("/userAllDetails/:_id", controller.userAllDetails)
    .put("/updateProfile", controller.updateProfile)
    .delete("/deleteProfile", controller.deleteProfile)
    .put("/deactivateProfile", controller.deactivateProfile)
    //.put("/processing", controller.matchFaces)
    //.put("/processing", controller.loadModels)
    
    .put("/processing", controller.main)
    .get("/subscribeNow/:nftId", controller.subscribeNow)
    .get("/followProfile/:userId", controller.followProfile)
    .get("/profileFollowersList", controller.profileFollowersList)
    .get("/profileFollowingList", controller.profileFollowingList)
    .get("/subscription/:_id", controller.viewSubscription)
    .delete("/subscription", controller.deleteSubscription)
    .get("/mySubscriptions", controller.mySubscriptions)
    .get("/mypurchases", controller.mypurchases)
    .get("/mysales", controller.mysales)
    .get("/mySubscribers", controller.mySubscribers)
    .get("/myFeed", controller.myFeed)
    .get("/likeDislikeNft/:nftId", controller.likeDislikeNft)
    .get("/likeDislikeNft1/:nft1Id", controller.likeDislikeNft1)
    .get("/likeDislikeAuctionNft/:auctionId", controller.likeDislikeAuctionNft)
    .get("/likeDislikeFeed/:feedId", controller.likeDislikeFeed)
    .get("/likeDislikeUser/:userId", controller.likeDislikeUser)

    .get("/reportNow/:chatId", controller.reportNow)
    .get("/bundle/:_id", controller.viewBundle)
    .get("/bundleContentList", controller.bundleContentList)
    .post("/donation", controller.donation)
    .get("/donateUserList", controller.donateUserList)
    .get("/getCategory", controller.getCategory)
    .get("/getCertificates", controller.getCertificates)
    .get("/sharedBundleList", controller.sharedBundleList)
    .get("/viewTransaction/:_id", controller.viewTransaction)
    .get("/transactionList", controller.transactionList)
    .get("/donationTransactionlist", controller.donationTransactionlist)
    .post("/publicPrivateFeed", controller.publicPrivateFeed)
    .get("/viewMyfeed", controller.viewMyfeed)
    .get("/userprofile", controller.userprofile)
    .get("/getMyFeed", controller.getMyFeed)
    .post("/privatePublicFeed", controller.privatePublicFeed)
    .get("/findContentCreator/:_id", controller.findContentCreator)
    .delete("/unSubscription", controller.unSubscription)
    .get("/depositeTransactionlist", controller.depositeTransactionlist)
    .get("/sharedFeedList", controller.sharedFeedList)
    .get("/getSubscription/:userId/:nftId", controller.getSubscription)
    .use(upload.uploadFile)
    .post("/shareWithAudience", controller.shareWithAudience)
    .put("/editAudience", controller.editAudience)
    .put("/updateProfile", controller.updateProfile)
    .put("/bill/", controller.bill);
    
